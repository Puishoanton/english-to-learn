name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm install

      - name: Generate environment.ts
        run: |
          mkdir -p src/environments
          echo "export const environment = {
            apiBaseUrl: '${{ secrets.apiBaseUrl }}',
            "Client_Url": '${{ secrets.Client_Url }}',
            googleClientId: '${{ secrets.googleClientId }}'
          };" > src/environments/environment.ts
          cp src/environments/environment.ts src/environments/environment.prod.ts

      - name: Build Angular
        run: npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        run: |
          COMMIT_SHA=${{ github.sha }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/english-to-learn-frontend:$COMMIT_SHA .
          docker tag ${{ secrets.DOCKER_USERNAME }}/english-to-learn-frontend:$COMMIT_SHA ${{ secrets.DOCKER_USERNAME }}/english-to-learn-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/english-to-learn-frontend:$COMMIT_SHA
          docker push ${{ secrets.DOCKER_USERNAME }}/english-to-learn-frontend:latest      

  backend:
    name: Build Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Generate appsettings.json
        run: |
          echo '{
            "ConnectionStrings": {
              "DefaultConnection": "${{ secrets.DefaultConnection }}"
            },
            "Logging": {
              "LogLevel": {
                "Default": "Information",
                "Microsoft.AspNetCore": "Warning"
              }
            },
            "Jwt": {
              "AccessTokenSecretKey": "${{ secrets.AccessTokenSecretKey }}",
              "RefreshTokenSecretKey": "${{ secrets.RefreshTokenSecretKey }}",
              "Issuer": "Issuer",
              "Audience": "Audience"
            }
          }' > appsettings.json    

      - name: Restore dependencies
        run: dotnet restore

      - name: Build backend
        run: dotnet build --configuration Release --no-restore

      - name: Publish backend
        run: dotnet publish -c Release -o out

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        run: |
          COMMIT_SHA=${{ github.sha }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/english-to-learn-backend:$COMMIT_SHA .
          docker tag ${{ secrets.DOCKER_USERNAME }}/english-to-learn-backend:$COMMIT_SHA ${{ secrets.DOCKER_USERNAME }}/english-to-learn-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/english-to-learn-backend:$COMMIT_SHA
          docker push ${{ secrets.DOCKER_USERNAME }}/english-to-learn-backend:latest   
          
  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: [frontend, backend]

    steps:
      - name: Trigger Backend Deploy
        run: |
          echo "Triggering deploy for Backend..."
          curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_BACKEND_SERVICE_ID }}/deploys" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Accept: application/json"

      - name: Trigger Frontend Deploy
        run: |
          echo "Triggering deploy for Frontend..."
          curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_FRONTEND_SERVICE_ID }}/deploys" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Accept: application/json"  
